<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
<!-- 첨부파일 CRUD 쿼리 생성 주 우리 로직에서는 첨부파일은 수정x->일렵,삭제-->
<!-- 첨부파일 삭제는 1개만 삭제하지않고, 게시물별(bno)일괄삭제도 있음 -->
<delete id="deleteAttachAll">
delete from tbl_attach where bno = #{bno}
</delete>
<delete id="deleteAttach">
delete from tbl_attach where save_file_name = #{save_file_name}
</delete>
<update id="updateAttach">
insert into tbl_attach (save_file_name,real_file_name,reg_date,bno)
values (#{save_file_name},#{real_file_name},sysdate,#{bno})
</update>
<select id="readAttach" resultType="com.edu.vo.AttachVO">
select * from tbl_attach where bno = #{bno}
</select>
<!-- 게시물 등록시 발생된bno를 구한 결과값1개만 구해서 첨부파일의 bno입력값으로 사용 -서브쿼리사용 -->
<insert id="insertAttach">
insert into tbl_attach 
(
	save_file_name, real_file_name, reg_date, bno
)
values
(
	#{save_file_name},#{real_file_name},sysdate,#{bno}

)
</insert>
<!--위 bno는 게시물 등록시 첨부파일 쿼리는 bno 매개변수로 보낼 수가 없는 상탬 -->
<!--게시물 CRUD 쿼리 생성 -->
<delete id="deleteBoard">
delete from tbl_board where bno = #{bno}
</delete>
<update id="updateBoard">
update tbl_board set
board_type = #{board_type}
,title = #{title}
,content = #{content}
,writer = #{writer}
,update_date = systimestamp
where bno = #{bno}
</update>
<!-- 아래 카운터는 게시물 상세보기시 카운트 증가 -->
<update id="updateViewCount">
update tbl_board set
view_count = nvl(view_count,0) + 1
where bno = #{bno}
</update>
<select id="readBoard" resultType="com.edu.vo.BoardVO">
select * from tbl_board where bno = #{bno}
</select>
<!-- bno필드변수가 자동 증가 되는 기능 필요 seq.nextVal
parameterType
 -->
<insert id="insertBoard" parameterType="com.edu.vo.BoardVO">
    <selectKey keyProperty="bno" resultType="int" order="BEFORE">
	select seq_bno.nextval from dual
	</selectKey>
	insert into tbl_board 
	(
	bno, title, content, writer, reg_date, board_type
	)
	values 
	(
	#{bno},#{title},#{content},#{writer},systimestamp,#{board_type}
	) 
</insert>
<!-- 페이징을 제외한 검색 쿼리 이용해서 게시물 개수 tatalCount변수값구하기 -->
<select id="countBoard" resultType="int">
select count(*) from tbl_board
<include refid="sqlWhere"/>
</select>
<!-- 페이징 처리 때문에 중첩쿼리 생성(아래) -->
<select id="selectBoard" resultType="com.edu.vo.BoardVO">
select table_b.* from
(	
	select rownum as rnum, table_a.* from
	(
	select * from tbl_board
	<include refid="sqlWhere" />
	order by bno desc
	) table_a
	<![CDATA[	
	where rownum <= #{queryStartNo}+#{queryPerPageNum}
)table_b where table_b. rnum > #{queryStartNo}
	]]>
</select>
<!-- 검색처리는 멤버쿼리에서 작성한 내용 붙여넣고 다중게시판용 필드조회조건 추가 pageVO -->
<sql id="sqlWhere">
  WHERE board_type = #{board_type}
<if test ="search_type != ''and search_type != null">
      		and (
            <if test="search_type =='all'.toString()">
		        title LIKE '%'||#{search_keyword}||'%'
		        OR content LIKE '%'||#{search_keyword}||'%'
	        </if>
	        <if test="search_type =='title'.toString()">
	        	title LIKE '%'||#{search_keyword}||'%'
	        </if>
	        <if test="search_type =='content'.toString()">
	       	 	content LIKE '%'||#{search_keyword}||'%'
	        </if>
	        )
        </if>
 </sql> 
</mapper>